"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _react = _interopRequireWildcard(require("react"));

var _switch = _interopRequireDefault(require("part:@sanity/components/toggles/switch"));

var _checkbox = _interopRequireDefault(require("part:@sanity/components/toggles/checkbox"));

var _status = _interopRequireDefault(require("part:@sanity/components/validation/status"));

var _PatchEvent = _interopRequireWildcard(require("../PatchEvent"));

var _BooleanInput = _interopRequireDefault(require("./BooleanInput.css"));

var _FieldStatus = _interopRequireDefault(require("@sanity/components/lib/fieldsets/FieldStatus"));

var _presence = require("@sanity/base/presence");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

var BooleanInput = /*#__PURE__*/_react.default.forwardRef((props, ref) => {
  var inputRef = (0, _react.useRef)(null);

  var handleChange = event => {
    props.onChange(_PatchEvent.default.from((0, _PatchEvent.set)(event.currentTarget.checked)));
  };

  var value = props.value,
      type = props.type,
      readOnly = props.readOnly,
      onFocus = props.onFocus,
      markers = props.markers,
      presence = props.presence;
  var isCheckbox = type.options && type.options.layout === 'checkbox';
  return /*#__PURE__*/_react.default.createElement("div", {
    className: _BooleanInput.default.root,
    ref: ref
  }, isCheckbox ? /*#__PURE__*/_react.default.createElement(_checkbox.default, {
    ref: inputRef,
    label: type.title,
    readOnly: readOnly,
    onChange: handleChange,
    onFocus: onFocus,
    checked: value,
    description: type.description
  }, /*#__PURE__*/_react.default.createElement(_status.default, {
    markers: markers
  })) : /*#__PURE__*/_react.default.createElement(_switch.default, {
    ref: inputRef,
    readOnly: readOnly,
    checked: value,
    label: type.title,
    description: type.description,
    onChange: handleChange,
    onFocus: onFocus
  }, /*#__PURE__*/_react.default.createElement(_status.default, {
    markers: markers
  })), /*#__PURE__*/_react.default.createElement(_FieldStatus.default, {
    position: "top"
  }, /*#__PURE__*/_react.default.createElement(_presence.FieldPresence, {
    presence: presence
  })));
});

BooleanInput.displayName = 'BooleanInput';
var _default = BooleanInput;
exports.default = _default;