/// <reference types="react" />
import { OnCopyFn, OnPasteFn, Patch as EditorPatch, PortableTextBlock, Type, HotkeyOptions } from '@sanity/portable-text-editor';
import { Subject } from 'rxjs';
import PatchEvent from '../../PatchEvent';
import { Presence, Marker } from '../../typedefs';
import { Path } from '../../typedefs/path';
import { RenderBlockActions, RenderCustomMarkers } from './types';
declare type Props = {
    focusPath: Path;
    hasFocus: boolean;
    hotkeys: HotkeyOptions;
    isFullscreen: boolean;
    markers: Array<Marker>;
    onBlur: () => void;
    onChange: (arg0: PatchEvent) => void;
    onCopy?: OnCopyFn;
    onFocus: (Path: any) => void;
    onPaste?: OnPasteFn;
    onToggleFullscreen: () => void;
    patche$: Subject<EditorPatch>;
    presence: Presence[];
    readOnly: boolean | null;
    renderBlockActions?: RenderBlockActions;
    renderCustomMarkers?: RenderCustomMarkers;
    type: Type;
    value: PortableTextBlock[] | undefined;
};
export default function PortableTextInput(props: Props): JSX.Element;
export {};
