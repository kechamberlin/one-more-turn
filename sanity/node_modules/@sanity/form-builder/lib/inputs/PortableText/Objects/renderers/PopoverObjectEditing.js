"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.PopoverObjectEditing = void 0;

var _react = _interopRequireWildcard(require("react"));

var _popover = _interopRequireDefault(require("part:@sanity/components/dialogs/popover"));

var _stacked = _interopRequireDefault(require("part:@sanity/components/utilities/stacked"));

var _content = _interopRequireDefault(require("part:@sanity/components/dialogs/content"));

var _presence = require("@sanity/base/presence");

var _FormBuilderInput = require("../../../../FormBuilderInput");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

/* eslint-disable react/prop-types */
var PopoverObjectEditing = (_ref) => {
  var focusPath = _ref.focusPath,
      markers = _ref.markers,
      object = _ref.object,
      onBlur = _ref.onBlur,
      onChange = _ref.onChange,
      onClose = _ref.onClose,
      onFocus = _ref.onFocus,
      path = _ref.path,
      presence = _ref.presence,
      readOnly = _ref.readOnly,
      referenceElement = _ref.referenceElement,
      type = _ref.type;

  var handleChange = patchEvent => onChange(patchEvent, path);

  var element = (0, _react.useMemo)(() => referenceElement, []);
  return /*#__PURE__*/_react.default.createElement(_stacked.default, null, () => /*#__PURE__*/_react.default.createElement(_popover.default, {
    placement: "bottom",
    referenceElement: element,
    onClickOutside: onClose,
    onEscape: onClose,
    onClose: onClose,
    title: type.title
  }, /*#__PURE__*/_react.default.createElement(_content.default, {
    size: "small",
    padding: "none"
  }, /*#__PURE__*/_react.default.createElement(_presence.PresenceOverlay, null, /*#__PURE__*/_react.default.createElement(_FormBuilderInput.FormBuilderInput, {
    type: type,
    level: 0,
    readOnly: readOnly || type.readOnly,
    value: object,
    onChange: handleChange,
    onFocus: onFocus,
    onBlur: onBlur,
    focusPath: focusPath,
    path: path,
    presence: presence,
    markers: markers
  })))));
};

exports.PopoverObjectEditing = PopoverObjectEditing;