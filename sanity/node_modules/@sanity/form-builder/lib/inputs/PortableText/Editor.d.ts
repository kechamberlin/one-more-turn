/// <reference types="react" />
import { HotkeyOptions, PortableTextBlock, PortableTextFeatures, RenderAnnotationFunction, RenderBlockFunction, RenderChildFunction, EditorSelection, OnPasteFn, OnCopyFn } from '@sanity/portable-text-editor';
import PatchEvent from '../../PatchEvent';
import { Marker } from '../../typedefs';
import { RenderBlockActions, RenderCustomMarkers } from './types';
declare type Props = {
    initialSelection?: EditorSelection;
    isFullscreen: boolean;
    markers: Array<Marker>;
    hotkeys: HotkeyOptions;
    onBlur: () => void;
    onCopy?: OnCopyFn;
    onCloseValidationResults: () => void;
    onFocus: (Path: any) => void;
    onFormBuilderChange: (change: PatchEvent) => void;
    onPaste?: OnPasteFn;
    onToggleFullscreen: () => void;
    onToggleValidationResults: () => void;
    portableTextFeatures: PortableTextFeatures;
    readOnly: boolean | null;
    renderAnnotation: RenderAnnotationFunction;
    renderBlock: RenderBlockFunction;
    renderBlockActions?: RenderBlockActions;
    renderChild: RenderChildFunction;
    renderCustomMarkers?: RenderCustomMarkers;
    showValidationTooltip: boolean;
    value: PortableTextBlock[] | undefined;
};
declare function PortableTextSanityEditor(props: Props): JSX.Element;
export default PortableTextSanityEditor;
