"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Annotation = void 0;

var _react = _interopRequireWildcard(require("react"));

var _classnames = _interopRequireDefault(require("classnames"));

var _paths = require("@sanity/util/paths");

var _Annotation = _interopRequireDefault(require("./Annotation.css"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

/* eslint-disable react/prop-types */
var Annotation = (_ref) => {
  var children = _ref.children,
      markers = _ref.markers,
      _ref$attributes = _ref.attributes,
      focused = _ref$attributes.focused,
      selected = _ref$attributes.selected,
      path = _ref$attributes.path,
      value = _ref.value,
      onFocus = _ref.onFocus;
  var validation = markers.filter(marker => marker.type === 'validation');
  var errors = validation.filter(marker => marker.level === 'error');
  var classnames = (0, _classnames.default)([_Annotation.default.root, focused && _Annotation.default.focused, selected && _Annotation.default.selected, errors.length > 0 ? _Annotation.default.error : _Annotation.default.valid]);

  var handleOpen = event => {
    event.preventDefault();
    event.stopPropagation();
    onFocus([...path.slice(0, 1), 'markDefs', {
      _key: value._key
    }, _paths.FOCUS_TERMINATOR]);
  };

  var annotation = (0, _react.useMemo)(() => /*#__PURE__*/_react.default.createElement("span", {
    className: classnames,
    onClick: handleOpen
  }, children), [_classnames.default]);
  return annotation;
};

exports.Annotation = Annotation;