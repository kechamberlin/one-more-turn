"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Validation = Validation;

var _react = _interopRequireDefault(require("react"));

var _reactTippy = require("react-tippy");

var _schema = _interopRequireDefault(require("part:@sanity/base/schema"));

var _default = _interopRequireDefault(require("part:@sanity/components/buttons/default"));

var _list = _interopRequireDefault(require("part:@sanity/components/validation/list"));

var _errorOutlineIcon = _interopRequireDefault(require("part:@sanity/base/error-outline-icon"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function Validation(props) {
  var onCloseValidationResults = props.onCloseValidationResults,
      onToggleValidationResults = props.onToggleValidationResults,
      onFocus = props.onFocus,
      showValidationTooltip = props.showValidationTooltip,
      type = props.type,
      markers = props.markers;
  var validation = markers.filter(marker => marker.type === 'validation');
  var errors = validation.filter(marker => marker.level === 'error');
  var warnings = validation.filter(marker => marker.level === 'warning');

  if (errors.length === 0 && warnings.length === 0) {
    return null;
  }

  return /*#__PURE__*/_react.default.createElement(_reactTippy.Tooltip, {
    arrow: true,
    distance: 13,
    trigger: "click",
    theme: "light",
    position: "bottom",
    inertia: false,
    interactive: true,
    open: showValidationTooltip,
    onRequestClose: onCloseValidationResults,
    html: /*#__PURE__*/_react.default.createElement(_list.default, {
      markers: validation,
      showLink: true,
      isOpen: showValidationTooltip,
      documentType: _schema.default.get(type),
      onClose: onCloseValidationResults,
      onFocus: onFocus
    })
  }, /*#__PURE__*/_react.default.createElement(_default.default, {
    title: "Show validation issues",
    kind: "simple",
    color: errors.length > 0 ? 'danger' : 'warning',
    icon: _errorOutlineIcon.default,
    onClick: onToggleValidationResults,
    padding: "small",
    selected: showValidationTooltip
  }));
}