"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _classnames = _interopRequireDefault(require("classnames"));

var _react = _interopRequireDefault(require("react"));

var _errorOutlineIcon = _interopRequireDefault(require("part:@sanity/base/error-outline-icon"));

var _ValidationListItem = _interopRequireDefault(require("./ValidationListItem.css"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

class ValidationListItem extends _react.default.PureComponent {
  constructor() {
    super(...arguments);

    _defineProperty(this, "_element", void 0);

    _defineProperty(this, "handleKeyPress", event => {
      if (event.key === 'Enter') {
        this.handleClick(event);
      }
    });

    _defineProperty(this, "handleClick", event => {
      var _this$props = this.props,
          marker = _this$props.marker,
          onClick = _this$props.onClick;

      if (onClick) {
        onClick(event, marker.path);
      }
    });

    _defineProperty(this, "setElement", element => {
      this._element = element;
    });
  }

  componentDidMount() {
    if (this.props.hasFocus) {
      this.focus();
    }
  }

  focus() {
    setTimeout(() => {
      this._element.focus();
    }, 200);
  }

  UNSAFE_componentWillReceiveProps(nextProps) {
    if (nextProps.hasFocus) {
      this.focus();
    }
  }

  render() {
    var _this$props2 = this.props,
        kind = _this$props2.kind,
        marker = _this$props2.marker,
        onClick = _this$props2.onClick,
        path = _this$props2.path,
        truncate = _this$props2.truncate;
    return /*#__PURE__*/_react.default.createElement("a", {
      "data-item-type": kind,
      ref: this.setElement,
      tabIndex: 0,
      onClick: this.handleClick,
      onKeyPress: this.handleKeyPress,
      className: (0, _classnames.default)(onClick ? _ValidationListItem.default.interactiveItem : _ValidationListItem.default.item, _ValidationListItem.default[marker.level], truncate && _ValidationListItem.default.truncate)
    }, /*#__PURE__*/_react.default.createElement("span", {
      className: _ValidationListItem.default.icon
    }, /*#__PURE__*/_react.default.createElement(_errorOutlineIcon.default, null)), /*#__PURE__*/_react.default.createElement("div", {
      className: _ValidationListItem.default.content
    }, path && /*#__PURE__*/_react.default.createElement("div", {
      className: _ValidationListItem.default.path
    }, path), marker.item.message && /*#__PURE__*/_react.default.createElement("div", {
      className: _ValidationListItem.default.message
    }, marker.item.message)));
  }

}

exports.default = ValidationListItem;

_defineProperty(ValidationListItem, "defaultProps", {
  kind: '',
  path: '',
  onClick: undefined,
  showLink: false,
  truncate: false
});