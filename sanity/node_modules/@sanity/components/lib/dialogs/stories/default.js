"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.DefaultStory = DefaultStory;

var _range2 = _interopRequireDefault(require("lodash/range"));

var _chance = _interopRequireDefault(require("chance"));

var _actions = require("part:@sanity/storybook/addons/actions");

var _knobs = require("part:@sanity/storybook/addons/knobs");

var _default = _interopRequireDefault(require("part:@sanity/components/dialogs/default"));

var _content = _interopRequireDefault(require("part:@sanity/components/dialogs/content"));

var _sanity = _interopRequireDefault(require("part:@sanity/storybook/addons/sanity"));

var _react = _interopRequireDefault(require("react"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var chance = new _chance.default();
var dialogTestContent = {
  minimal: 'minimal',
  paragraph: 'paragraph',
  longtext: 'longtext',
  example: 'example with dialogcontent'
};
var paragraph = chance.paragraph();
var paragraphs = (0, _range2.default)(0, 20).map(i => /*#__PURE__*/_react.default.createElement("p", {
  key: i
}, chance.paragraph()));

function renderContent(type) {
  switch (type) {
    case 'paragraph':
      return /*#__PURE__*/_react.default.createElement("p", null, paragraph);

    case 'longtext':
      return paragraphs;

    case 'example':
      return /*#__PURE__*/_react.default.createElement(_content.default, {
        size: "medium",
        padding: "medium"
      }, /*#__PURE__*/_react.default.createElement("h1", null, "With dialog content"), /*#__PURE__*/_react.default.createElement("p", null, paragraph));

    default:
      return 'Minimal';
  }
}

function DefaultStory() {
  var actions = [{
    index: '1',
    title: 'Finish',
    color: 'primary',
    autoFocus: true
  }, {
    index: '2',
    title: 'Cancel'
  }, {
    index: '3',
    title: 'Secondary',
    color: 'danger',
    secondary: true
  }];
  var dialogActions = (0, _knobs.boolean)('Show actions', false, 'test') ? actions : [];
  var contentTest = (0, _knobs.select)('content', dialogTestContent, 'minimal');
  return /*#__PURE__*/_react.default.createElement(_sanity.default, {
    part: "part:@sanity/components/dialogs/default",
    propTables: [_default.default]
  }, /*#__PURE__*/_react.default.createElement(_default.default, {
    title: (0, _knobs.text)('title', undefined, 'props'),
    color: (0, _knobs.select)('color', ['default', 'danger', 'success', 'info', 'warning'], undefined, 'props'),
    showCloseButton: (0, _knobs.boolean)('showCloseButton', false, 'props'),
    onEscape: (0, _actions.action)('onEscape'),
    onClose: (0, _actions.action)('onClose'),
    onAction: (0, _actions.action)('onAction'),
    actions: dialogActions
  }, contentTest && renderContent(contentTest)));
}