"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.ConfirmStory = ConfirmStory;

var _range2 = _interopRequireDefault(require("lodash/range"));

var _chance = _interopRequireDefault(require("chance"));

var _actions = require("part:@sanity/storybook/addons/actions");

var _knobs = require("part:@sanity/storybook/addons/knobs");

var _content = _interopRequireDefault(require("part:@sanity/components/dialogs/content"));

var _confirm = _interopRequireDefault(require("part:@sanity/components/dialogs/confirm"));

var _sanity = _interopRequireDefault(require("part:@sanity/storybook/addons/sanity"));

var _react = _interopRequireDefault(require("react"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var chance = new _chance.default();
var dialogTestContent = {
  minimal: 'minimal',
  paragraph: 'paragraph',
  longtext: 'longtext',
  example: 'example with dialogcontent'
};
var paragraph = chance.paragraph();
var paragraphs = (0, _range2.default)(0, 20).map(i => /*#__PURE__*/_react.default.createElement("p", {
  key: i
}, chance.paragraph()));

function renderContent(type) {
  switch (type) {
    case 'paragraph':
      return /*#__PURE__*/_react.default.createElement("p", null, paragraph);

    case 'longtext':
      return /*#__PURE__*/_react.default.createElement("div", null, paragraphs);

    case 'example':
      return /*#__PURE__*/_react.default.createElement(_content.default, {
        size: "medium",
        padding: "medium"
      }, /*#__PURE__*/_react.default.createElement("h1", null, "With dialog content"), /*#__PURE__*/_react.default.createElement("p", null, paragraph));

    default:
      return 'Minimal';
  }
}

function ConfirmStory() {
  var contentTest = (0, _knobs.select)('content', dialogTestContent, 'minimal');
  return /*#__PURE__*/_react.default.createElement(_sanity.default, {
    part: "part:@sanity/components/dialogs/confirm",
    propTables: [_confirm.default]
  }, /*#__PURE__*/_react.default.createElement(_confirm.default, {
    color: (0, _knobs.select)('color', ['default', 'danger', 'success', 'info', 'warning'], undefined, 'props'),
    confirmColor: (0, _knobs.select)('confirmColor', [undefined, 'danger', 'success'], undefined, 'props'),
    cancelColor: (0, _knobs.select)('cancelColor', [undefined, 'danger', 'success'], undefined, 'props'),
    onConfirm: (0, _actions.action)('onConfirm'),
    onCancel: (0, _actions.action)('onCancel'),
    confirmButtonText: (0, _knobs.text)('confirmButtonText', 'Yes, delete', 'props'),
    cancelButtonText: (0, _knobs.text)('cancelButtonText', undefined, 'props'),
    title: (0, _knobs.text)('title', 'Confirm', 'props')
  }, contentTest && renderContent(contentTest)));
}