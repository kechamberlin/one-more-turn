"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _classnames = _interopRequireDefault(require("classnames"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _react = _interopRequireDefault(require("react"));

var _buttonGridStyle = _interopRequireDefault(require("part:@sanity/components/buttons/button-grid-style"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function toChildrenArray(val) {
  return (Array.isArray(val) ? val : [val]).filter(node => node !== null && node !== undefined);
}

class ButtonGrid extends _react.default.PureComponent {
  render() {
    var _this$props = this.props,
        align = _this$props.align,
        childrenProp = _this$props.children,
        className = _this$props.className,
        secondary = _this$props.secondary;
    var children = toChildrenArray(childrenProp);
    var secondaryChildren = toChildrenArray(secondary);
    var len = children.length + secondaryChildren.length;
    if (len === 0) return null;
    return /*#__PURE__*/_react.default.createElement("div", {
      className: (0, _classnames.default)(className, align === 'start' ? _buttonGridStyle.default.alignStart : _buttonGridStyle.default.alignEnd),
      "data-buttons": len
    }, children, secondaryChildren.map((child, childIndex) => /*#__PURE__*/_react.default.createElement("div", {
      className: _buttonGridStyle.default.secondary,
      key: String(childIndex)
    }, child)));
  }

}

exports.default = ButtonGrid;

_defineProperty(ButtonGrid, "propTypes", {
  children: _propTypes.default.node.isRequired,
  secondary: _propTypes.default.oneOfType([_propTypes.default.node, _propTypes.default.arrayOf([_propTypes.default.node])]),
  align: _propTypes.default.oneOf(['start', 'end']),
  className: _propTypes.default.string
});

_defineProperty(ButtonGrid, "defaultProps", {
  align: 'start',
  secondary: null,
  className: ''
});